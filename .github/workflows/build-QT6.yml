name: Build REG-linux QT6

on:
  push: 
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'with TMATE'
        required: false
        default: false

concurrency:
    group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
  contents: write

env:
  LANG: en_US.UTF-8
  LANGUAGE: en_US:en
  LC_ALL: en_US.UTF-8
  FORCE_UNSAFE_CONFIGURE: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build REG-linux QT6
    runs-on: ubuntu-latest
    container: reglinux/reglinux-build:latest
    outputs:
      qtversion: ${{ steps.compile_step.outputs.qtversion }}
      sufixdate: ${{ steps.compile_step.outputs.sufixdate }}
      dorelease: ${{ false || steps.compile_step.outputs.dorelease }}
    strategy:
      matrix:
        platform: [bcm2711]
    steps:
      - name: Compile ${{ matrix.platform }}
        id: compile_step
        shell: bash
        run: |
          cat << EOF > free_some_space.sh
          #!/bin/bash
          cd "\$1"
          find ./ -type f -iname "*.o" -delete
          ESCAPELOOP=0
          while test "\$(df -BG --output=avail ./ | tail -1 | grep -o "[0-9]*" | head -1)" -lt 5 ; do
          	find ./ -mindepth 1 -maxdepth 1 -type d -not \( -iname "buildroot-config" -or -iname "linux-headers-*" -or -iname "toolchain*" \) -exec du -sk -- {} \; 2>/dev/null | sort -hr | head -1 | cut -f 2- | xargs -d "\\n" -I{} -n1 -rt -- find {} -type f -not \( -iname ".stamp*" -or -iname ".br*" -or -iname "*config*" -or -iname "Makefile*" -or -iname "*autoconf*" -or -iname "*auto.conf*" -or -iname "CMakeLists*" -or -iname "libavahi-client.la" -or -iname "libavahi-client.so" -or -iname "libavahi-common.la" -or -iname "libavahi-common.so" -or -iname "libblkid.la" -or -iname "libblkid.so" -or -iname "libx*.la*" -or -iname "lib1.cpp" \) -delete
          	((ESCAPELOOP++))
          	test "\$ESCAPELOOP" -lt 10 || break
          done
          EOF
          chmod 755 free_some_space.sh
          
          git clone --branch master "https://github.com/REG-Linux/REG-Linux.git" ./REG-LINUX
          cd REG-LINUX
          git submodule init
          git submodule update
          rm -rf .git .github
          
          # After each package is compiled and installed, delete some of the biggest folders
          sed -i '/stamp_installed\:/,/stamp_dircleaned\:/ s:^$:\t. \$\{GITHUB_WORKSPACE\}/free_some_space.sh $(BUILD_DIR) \
          	du -h -s $(PWD) \
          	df -Ph $(PWD) \n :' buildroot/package/pkg-generic.mk
          
          # After each downloaded package is extracted, delete older and keep latest 3
          sed -i 's:(TAR_OPTIONS) -:(TAR_OPTIONS) - \&\& find \$\$(DL_DIR) -mindepth 1 -maxdepth 1 -type d -printf "%T\@\\t%p\\n" | sort -g | head -n -3 | cut -f 2- | xargs -r rm -rfv :' buildroot/package/pkg-generic.mk
          
          # Disable CCACHE and BR2_PER_PACKAGE_DIRECTORIES
          sed -i "/BR2_CCACHE/d" configs/reglinux-board.common
          sed -i "/BR2_PER_PACKAGE_DIRECTORIES/d" configs/* Makefile
          
          # Enable the flag to build QT6 from source
          sed -i s/#BR2_PACKAGE_REGLINUX_QT6=y/BR2_PACKAGE_REGLINUX_QT6=y/ configs/reglinux-board.common
          sed -i s/#BR2_PACKAGE_REGLINUX_QT6_BUILD_FROM_SOURCE=y/BR2_PACKAGE_REGLINUX_QT6_BUILD_FROM_SOURCE=y/ configs/reglinux-board.common
          sed -i s/#BR2_PACKAGE_QT6BASE_DEFAULT_QPA=\"wayland\"/BR2_PACKAGE_QT6BASE_DEFAULT_QPA=\"wayland\"/ configs/reglinux-board.common
          
          # Merge buildroot patches
          CUSTOM_DIR=${GITHUB_WORKSPACE}/REG-LINUX/custom BUILDROOT_DIR=${GITHUB_WORKSPACE}/REG-LINUX/buildroot ${GITHUB_WORKSPACE}/REG-LINUX/scripts/linux/mergeToBR.sh
          
          # Version
          qtversion=$(grep -m 1 REGLINUX_QT6_VERSION package/libraries/reglinux-qt6/reglinux-qt6.mk | sed -e "s/.*=[ ]*//")
          echo "qtversion=${qtversion}" >> "$GITHUB_OUTPUT"
          
          # Build
          ${GITHUB_WORKSPACE}/REG-LINUX/configs/createDefconfig.sh ${GITHUB_WORKSPACE}/REG-LINUX/configs/reglinux-${{ matrix.platform }}
          CCACHE_DISABLE=1 make O_=${GITHUB_WORKSPACE}/REG-LINUX/buildroot/output/build BR2_EXTERNAL=${GITHUB_WORKSPACE}/REG-LINUX -C ${GITHUB_WORKSPACE}/REG-LINUX/buildroot reglinux-${{ matrix.platform }}_defconfig
          CCACHE_DISABLE=1 make O_=${GITHUB_WORKSPACE}/REG-LINUX/buildroot/output/build BR2_EXTERNAL=${GITHUB_WORKSPACE}/REG-LINUX -C ${GITHUB_WORKSPACE}/REG-LINUX/buildroot reglinux-qt6
          
          # Create built output directory
          mkdir -p ${GITHUB_WORKSPACE}/REG-QT6-COMPILED
          
          # Create package
          cd ${GITHUB_WORKSPACE}/REG-LINUX/buildroot/output || exit 1
          staging="$(cat build/staging.dir)"
          cat build/host-qt6*/.files-list-host.txt | cut -d ',' -f 2 | sed -e 's/\.\//host\//g' >qt6-host-files.txt
          cat build/qt6*/.files-list-staging.txt | cut -d ',' -f 2 | sed -e "s+\.\/+$staging\/+g" >qt6-staging-files.txt
          cat build/qt6*/.files-list.txt | cut -d ',' -f 2 | sed -e 's/\.\//target\//g' >qt6-target-files.txt
          cat qt6-host-files.txt qt6-staging-files.txt qt6-target-files.txt >filelist.txt
          find . | grep /host/ | grep Qt >>filelist.txt
          find . | grep /target/ | grep Qt >>filelist.txt
          awk -i inplace '!seen[$0]++' filelist.txt
          tar cvzf  ${GITHUB_WORKSPACE}/REG-QT6-COMPILED/reglinux-qt6-${qtversion}"-${{ matrix.platform }}.tar.gz -T filelist.txt
          
      - name: Tmate
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled && failure() }}
        timeout-minutes: 30

      - name: upload_artifacts_${{ matrix.platform }}
        id: upload_artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reglinux-qt6-${{ steps.compile_step.outputs.qtversion }}-${{ matrix.platform }}
          path: ./REG-QT6-COMPILED/

      - name: Create release
        uses: softprops/action-gh-release@master
        with:
          files: ./REG-QT6-COMPILED/**/reglinux-qt6-*
          tag_name: ${{ needs.build.outputs.qtversion }}
          prerelease: false
          generate_release_notes: true
          name: ${{ needs.build.outputs.qtversion }}
